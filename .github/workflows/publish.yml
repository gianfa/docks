name: CI/CD Pipeline

on:
  push:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

      - name: Install dependencies
        run: poetry install

      - name: Run linters and tests
        run: |
          poetry run black --check .
          # poetry run flake8
          poetry run pytest

      - name: Prepare version bump
        if: github.ref == 'refs/heads/main'
        id: bump_version
        run: |
          CURRENT_VERSION=$(poetry version -s)
          NEW_VERSION=$(poetry version patch | awk '{print $2}')
          echo "New version: $NEW_VERSION"

          # Update __init__.py
          echo "__version__ = '$NEW_VERSION'" > docks/__init__.py

          # Commit the updated version
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add pyproject.toml docks/__init__.py
          git commit -m "Bump version to $NEW_VERSION"
          git tag v$NEW_VERSION
          git push origin main --tags

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package-artifacts
          path: dist/

  publish:
    needs: prepare
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: package-artifacts

      # - name: Publish to PyPI
      #   env:
      #     POETRY_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      #   run: |
      #     curl -sSL https://install.python-poetry.org | python3 -
      #     poetry config pypi-token.pypi $POETRY_PASSWORD
      #     poetry publish --build
